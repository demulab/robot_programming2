 <launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/> 
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
   <arg name="world_name" value="$(find armbot2_sensor)/launch/armbot2.world"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
  command="$(find xacro)/xacro '$(find armbot2_sensor)/urdf/armbot2_sensor.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model armbot2_sensor -param robot_description"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find armbot2_sensor)/config/armbot2_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/armbot2_sensor" args="joint_state_controller
					  joint1_position_controller
					  joint2_position_controller"/>


  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  <!--   <rosparam param="source_list">[/joint_states]</rosparam>  -->
      <remap from="/joint_states" to="/armbot2_sensor/joint_states" /> 
  </node> 

  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
          <remap from="/joint_states" to="/armbot2_sensor/joint_states" />  
  </node> -->


</launch>


